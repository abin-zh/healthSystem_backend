<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cykj.mapper.MedicalPackageMapper">
    <resultMap id="BaseResultMap" type="com.cykj.model.pojo.MedicalPackage">
        <!--@mbg.generated-->
        <!--@Table medical_package-->
        <id column="package_id" jdbcType="INTEGER" property="packageId"/>
        <result column="package_name" jdbcType="VARCHAR" property="packageName"/>
        <result column="package_price" jdbcType="DECIMAL" property="packagePrice"/>
        <result column="package_is_deleted" jdbcType="BOOLEAN" property="packageIsDeleted"/>
        <collection property="projects" ofType="com.cykj.model.pojo.MedicalProject" resultMap="com.cykj.mapper.MedicalProjectMapper.BaseResultMap">
        </collection>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        package_id,
        package_name,
        package_price,
        package_is_deleted
    </sql>

    <!--auto generated by MybatisCodeHelper on 2024-08-08-->
    <select id="findByAllWithPage" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from medical_package
        <where>
            <if test="packageName != null and packageName != ''">
                and package_name like concat('%', #{packageName,jdbcType=VARCHAR}, '%')
            </if>
            <if test="beginPrice != null">
                and package_price >= #{beginPrice,jdbcType=DECIMAL}
            </if>
            <if test="endPrice != null">
                and package_price &lt;= #{endPrice,jdbcType=DECIMAL}
            </if>
        </where>
    </select>

    <!--auto generated by MybatisCodeHelper on 2024-08-13-->
    <select id="findAllByPackageName" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from medical_package
        where package_name = #{packageName,jdbcType=VARCHAR}
    </select>

    <insert id="addOneMedicalPackage" useGeneratedKeys="true" keyColumn="package_id" keyProperty="packageId">
        insert into medical_package(package_name, package_price)
            value (#{packageName,jdbcType=VARCHAR}, #{packagePrice,jdbcType=DECIMAL})
    </insert>

    <!--auto generated by MybatisCodeHelper on 2024-08-13-->
    <update id="updateByPackageId">
        update medical_package
        <set>
            <if test="updated.packageName != null and updated.packageName != ''">
                package_name = #{updated.packageName,jdbcType=VARCHAR},
            </if>
            <if test="updated.packagePrice != null">
                package_price = #{updated.packagePrice,jdbcType=DECIMAL},
            </if>
        </set>
        where package_id = #{packageId,jdbcType=INTEGER}
    </update>

    <update id="deleteMedicalPackage">
        update medical_package
        set package_is_deleted = 1
        where package_id = #{packageId, jdbcType=INTEGER}
    </update>

    <select id="findAllWithProjectByIsDelete" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List">
        </include>,
        <include refid="com.cykj.mapper.MedicalProjectMapper.Base_Column_List">
        </include>
        from medical_package
        join healthsystem.medical_package_project mpp on medical_package.package_id = mpp.pp_package_id
        join healthsystem.medical_project mp on mpp.pp_project_id = mp.project_id
        where package_is_deleted = #{isDelete, jdbcType=INTEGER}
    </select>

    <select id="findAllByPackageIds" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />,
        mpp.pp_project_id as project_id, project_name, project_price, project_is_deleted, project_dept_id
        from medical_package
        join healthsystem.medical_package_project mpp on medical_package.package_id = mpp.pp_package_id
        join healthsystem.medical_project mp on mpp.pp_project_id = mp.project_id
        <where>
            package_is_deleted = 0
            <if test="list != null and list.size() != 0">
                and package_id in
                <foreach collection="list" open="(" close=")" separator="," item="packageId">
                    #{packageId,jdbcType=INTEGER}
                </foreach>
            </if>
            <if test="list == null or list.size() &lt;= 0">
                and package_id = -1
            </if>
        </where>
    </select>
</mapper>